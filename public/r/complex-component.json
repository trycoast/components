{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "complex-component",
  "type": "registry:component",
  "title": "Complex Component",
  "description": "A complex component showing hooks, libs and components.",
  "registryDependencies": [
    "card"
  ],
  "files": [
    {
      "path": "registry/new-york/blocks/complex-component/page.tsx",
      "content": "import { cache } from \"react\"\r\nimport { PokemonCard } from \"@/registry/new-york/blocks/complex-component/components/pokemon-card\"\r\nimport { getPokemonList } from \"@/registry/new-york/blocks/complex-component/lib/pokemon\"\r\nconst getCachedPokemonList = cache(getPokemonList)\r\n\r\nexport default async function Page() {\r\n  const pokemons = await getCachedPokemonList({ limit: 12 })\r\n\r\n  if (!pokemons) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"mx-auto w-full max-w-2xl px-4\">\r\n      <div className=\"grid grid-cols-2 gap-4 py-10 sm:grid-cols-3 md:grid-cols-4\">\r\n        {pokemons.results.map((p) => (\r\n          <PokemonCard key={p.name} name={p.name} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n",
      "type": "registry:page",
      "target": "app/pokemon/page.tsx"
    },
    {
      "path": "registry/new-york/blocks/complex-component/components/pokemon-card.tsx",
      "content": "import { cache } from \"react\"\r\nimport { getPokemon } from \"@/registry/new-york/blocks/complex-component/lib/pokemon\"\r\nimport { Card, CardContent } from \"@/registry/new-york/ui/card\"\r\nimport { PokemonImage } from \"@/registry/new-york/blocks/complex-component/components/pokemon-image\"\r\n\r\nconst cachedGetPokemon = cache(getPokemon)\r\n\r\nexport async function PokemonCard({ name }: { name: string }) {\r\n  const pokemon = await cachedGetPokemon(name)\r\n\r\n  if (!pokemon) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent className=\"flex flex-col items-center p-2\">\r\n        <div>\r\n          <PokemonImage name={pokemon.name} number={pokemon.id} />\r\n        </div>\r\n        <div className=\"text-center font-medium\">{pokemon.name}</div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n",
      "type": "registry:component"
    },
    {
      "path": "registry/new-york/blocks/complex-component/components/pokemon-image.tsx",
      "content": "\"use client\"\r\n\r\n/* eslint-disable @next/next/no-img-element */\r\nimport { usePokemonImage } from \"@/registry/new-york/blocks/complex-component/hooks/use-pokemon\"\r\n\r\nexport function PokemonImage({\r\n  name,\r\n  number,\r\n}: {\r\n  name: string\r\n  number: number\r\n}) {\r\n  const imageUrl = usePokemonImage(number)\r\n\r\n  if (!imageUrl) {\r\n    return null\r\n  }\r\n\r\n  return <img src={imageUrl} alt={name} />\r\n}\r\n",
      "type": "registry:component"
    },
    {
      "path": "registry/new-york/blocks/complex-component/lib/pokemon.ts",
      "content": "import { z } from \"zod\"\r\n\r\nexport async function getPokemonList({ limit = 10 }: { limit?: number }) {\r\n  try {\r\n    const response = await fetch(\r\n      `https://pokeapi.co/api/v2/pokemon?limit=${limit}`\r\n    )\r\n    return z\r\n      .object({\r\n        results: z.array(z.object({ name: z.string() })),\r\n      })\r\n      .parse(await response.json())\r\n  } catch (error) {\r\n    console.error(error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport async function getPokemon(name: string) {\r\n  try {\r\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`)\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch pokemon\")\r\n    }\r\n\r\n    return z\r\n      .object({\r\n        name: z.string(),\r\n        id: z.number(),\r\n        sprites: z.object({\r\n          front_default: z.string(),\r\n        }),\r\n        stats: z.array(\r\n          z.object({\r\n            base_stat: z.number(),\r\n            stat: z.object({\r\n              name: z.string(),\r\n            }),\r\n          })\r\n        ),\r\n      })\r\n      .parse(await response.json())\r\n  } catch (error) {\r\n    console.error(error)\r\n    return null\r\n  }\r\n}\r\n",
      "type": "registry:lib"
    },
    {
      "path": "registry/new-york/blocks/complex-component/hooks/use-pokemon.ts",
      "content": "\"use client\"\r\n\r\n// Totally unnecessary hook, but it's a good example of how to use a hook in a custom registry.\r\n\r\nexport function usePokemonImage(number: number) {\r\n  return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${number}.png`\r\n}\r\n",
      "type": "registry:hook"
    }
  ]
}