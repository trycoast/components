{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-modal",
  "type": "registry:hook",
  "title": "Modal Manager",
  "description": "A hook that helps you lazily load and manage the modal render state.",
  "dependencies": [
    "@radix-ui/react-dialog"
  ],
  "files": [
    {
      "path": "registry/default/hooks/use-modal.tsx",
      "content": "import { cn } from \"@/lib/utils\";\r\nimport * as Dialog from \"@radix-ui/react-dialog\";\r\nimport { useCallback, useState } from \"react\";\r\n\r\nexport default function useModal<TProps>(render: (props: TProps) => React.ReactNode) {\r\n  const [open, setOpen] = useState(false);\r\n  const [props, setProps] = useState<TProps | null>(null);\r\n\r\n  const openModal = useCallback((newProps: TProps) => {\r\n    setProps(newProps);\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const closeModal = useCallback(() => {\r\n    setOpen(false);\r\n    setProps(null);\r\n  }, []);\r\n\r\n  const Modal = useCallback(() => {\r\n    if (!open || !props) return null;\r\n\r\n    return (\r\n      <Dialog.Root open={open} onOpenChange={setOpen}>\r\n        <Dialog.Portal>\r\n          <Dialog.Overlay\r\n            className={cn(\r\n              \"fixed inset-0 z-50 bg-black/50 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\"\r\n            )}\r\n          />\r\n          <Dialog.Title className=\"hidden\" />\r\n          <Dialog.Content\r\n            aria-labelledby={undefined}\r\n            aria-describedby={undefined}\r\n            className={cn(\r\n              \"fixed left-[50%] top-[50%] z-50 grid translate-x-[-50%] translate-y-[-50%] shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\"\r\n            )}\r\n          >\r\n            {render(props)}\r\n          </Dialog.Content>\r\n        </Dialog.Portal>\r\n      </Dialog.Root>\r\n    );\r\n  }, [open, props, render]);\r\n\r\n  return { open: openModal, close: closeModal, Modal };\r\n}\r\n",
      "type": "registry:hook"
    }
  ]
}